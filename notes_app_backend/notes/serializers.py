from rest_framework import serializers
from .models import Note

# A serializer converts Django model instances <-> JSON.
# DRF uses this to know how to return Note objects in API responses,
# and how to accept JSON from the frontend to create/update Note objects.
class NoteSerializer(serializers.ModelSerializer):
    # Add a read-only field that shows the username of the note’s owner.
    # "source" tells DRF to use owner.username instead of a direct DB field.
    owner_username = serializers.ReadOnlyField(source="owner.username")

    class Meta:
        model = Note    # This serializer is based on the Note model
        fields = [
            "id",               # Unique identifier for the note
            "title",            # Note title
            "content",          # Note content/body
            "created_at",       # Timestamp when created
            "owner",            # User ID of the note’s owner (foreign key)
            "owner_username"    # Username of the note’s owner (derived field)
        ]
        # Mark certain fields as read-only so they can’t be modified via API requests.
        # - id and created_at are auto-generated by Django
        # - owner is set automatically in views (perform_create)
        # - owner_username is derived (not editable)
        read_only_fields = ["id", "created_at", "owner", "owner_username"]